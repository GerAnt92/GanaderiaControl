@model GanaderiaControl.Models.ViewModels.DashboardViewModel
@using System.Text.Json
@{
    Layout = "_Layout";
    ViewData["Title"] = "Dashboard";

    // Defensivo: si el controller aún no llena estas props, evita null ref:
    var semanaLabels = Model.LecheSemanaLabels ?? Array.Empty<string>();
    var semanaData = Model.LecheSemanaData ?? Array.Empty<decimal>();
    var mesLabels = Model.LecheMesLabels ?? Array.Empty<string>();
    var mesData = Model.LecheMesData ?? Array.Empty<decimal>();
    var anioLabels = Model.LecheAnioLabels ?? Array.Empty<string>();
    var anioData = Model.LecheAnioData ?? Array.Empty<decimal>();

    // Serialización segura a JSON
    var jsonSemanaLabels = JsonSerializer.Serialize(semanaLabels);
    var jsonSemanaData = JsonSerializer.Serialize(semanaData);
    var jsonMesLabels = JsonSerializer.Serialize(mesLabels);
    var jsonMesData = JsonSerializer.Serialize(mesData);
    var jsonAnioLabels = JsonSerializer.Serialize(anioLabels);
    var jsonAnioData = JsonSerializer.Serialize(anioData);
}

@section Styles {
    <style>
        /* ===== Estilo tipo login (verde + glass) ===== */
        .gc-bg {
            background: radial-gradient(80vw 80vw at -10% -20%, rgba(61,153,112,.10), transparent 60%), radial-gradient(80vw 80vw at 110% 120%, rgba(0,0,0,.08), transparent 60%);
        }

        .gc-card {
            background: rgba(255,255,255,.96);
            backdrop-filter: blur(6px);
            border: 1px solid rgba(0,0,0,.06);
            border-radius: 16px;
            box-shadow: 0 12px 28px rgba(0,0,0,.10);
        }

        .gc-kpi {
            position: relative;
            overflow: hidden;
        }

            .gc-kpi::before {
                content: "";
                position: absolute;
                inset: 0;
                border-top: 4px solid #3d9970;
                border-radius: 16px 16px 0 0;
                pointer-events: none;
                opacity: .9;
            }

            .gc-kpi .title {
                color: #6b7280;
                font-weight: 600;
            }

            .gc-kpi .value {
                font-weight: 800;
                letter-spacing: .2px;
            }

        .gc-btn-outline {
            border: 2px solid rgba(0,0,0,.08);
            color: #3d9970;
            font-weight: 600;
        }

            .gc-btn-outline:hover {
                border-color: #3d9970;
                color: #2e7d57;
                background: rgba(61,153,112,.06);
            }

        .gc-table thead th {
            background: linear-gradient(180deg, rgba(0,0,0,.02), rgba(0,0,0,.00));
            font-size: .9rem;
            color: #374151;
            border-bottom: 1px solid rgba(0,0,0,.06);
        }

        .gc-table tbody td {
            border-color: rgba(0,0,0,.06) !important;
        }

        .gc-section-title {
            font-weight: 800;
            letter-spacing: .3px;
        }

        /* Badges por estado */
        .badge-pendiente {
            background: #ffe08a;
            color: #533f03;
        }

        .badge-notificada {
            background: #cfe8ff;
            color: #073763;
        }

        .badge-atendida {
            background: #b7f0c1;
            color: #0b5b2a;
        }

        .badge-vencida {
            background: #ffb3b3;
            color: #7a001c;
        }

        /* Tabs "Semana/Mes/Año" */
        .gc-pill {
            border: 2px solid rgba(0,0,0,.08);
            font-weight: 600;
            color: #3d9970;
        }

            .gc-pill.active,
            .gc-pill:focus,
            .gc-pill:hover {
                border-color: #3d9970;
                color: #2e7d57;
                background: rgba(61,153,112,.06);
            }
    </style>
}

<div class="gc-bg py-2">
    <div class="d-flex align-items-center justify-content-between mb-3">
        <h1 class="h3 mb-0" style="font-weight:800">📊 Dashboard</h1>
        <div class="d-flex gap-2">
            <a href="@Url.Action("Index", "Alertas", new { proximos = true })" class="btn gc-btn-outline btn-sm">Ver alertas</a>
            <a href="@Url.Action("Index", "Servicios")" class="btn gc-btn-outline btn-sm">Servicios</a>
        </div>
    </div>

    <!-- KPIs fila 1 -->
    <div class="row g-3 mb-2">
        <div class="col-md-3 col-6">
            <div class="card gc-card gc-kpi text-center h-100">
                <div class="card-body">
                    <div class="title">Animales</div>
                    <div class="h3 value">@Model.TotalAnimales</div>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-6">
            <div class="card gc-card gc-kpi text-center h-100">
                <div class="card-body">
                    <div class="title">Gestantes</div>
                    <div class="h3 value">@Model.Gestantes</div>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-6">
            <div class="card gc-card gc-kpi text-center h-100">
                <div class="card-body">
                    <div class="title">Servicios (mes)</div>
                    <div class="h3 value">@Model.ServiciosMes</div>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-6">
            <div class="card gc-card gc-kpi text-center h-100">
                <div class="card-body">
                    <div class="title">Producción hoy (L)</div>
                    <div class="h3 value">@Model.ProduccionHoyLitros.ToString("0.##")</div>
                </div>
            </div>
        </div>
    </div>

    <!-- KPIs fila 2 -->
    <div class="row g-3">
        <div class="col-md-3 col-6">
            <div class="card gc-card text-center h-100">
                <div class="card-body">
                    <div class="title">Alertas pendientes</div>
                    <div class="h3 value text-warning">@Model.AlertasPendientes</div>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-6">
            <div class="card gc-card text-center h-100">
                <div class="card-body">
                    <div class="title">Para hoy</div>
                    <div class="h3 value" style="color:#0ea5e9">@Model.AlertasHoyPendientes</div>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-6">
            <div class="card gc-card text-center h-100">
                <div class="card-body">
                    <div class="title">En la semana</div>
                    <div class="h3 value text-primary">@Model.AlertasSemanaPendientes</div>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-6">
            <div class="card gc-card text-center h-100">
                <div class="card-body">
                    <div class="title">Vencidas</div>
                    <div class="h3 value text-danger">@Model.AlertasVencidas</div>
                </div>
            </div>
        </div>
    </div>

    <!-- ===== CARD: Gráfico Producción de Leche ===== -->
    <div class="card gc-card mt-4">
        <div class="card-body">
            <div class="d-flex align-items-center justify-content-between mb-2">
                <h2 class="h6 mb-0 gc-section-title">🥛 Producción de leche</h2>
                <div class="d-flex gap-2" id="milkTabs">
                    <button type="button" class="btn btn-sm gc-btn-outline gc-pill active" id="tab-semana">Semana</button>
                    <button type="button" class="btn btn-sm gc-btn-outline gc-pill" id="tab-mes">Mes</button>
                    <button type="button" class="btn btn-sm gc-btn-outline gc-pill" id="tab-anio">Año</button>
                </div>
            </div>
            <div style="height: 320px">
                <canvas id="milkChart" aria-label="Gráfico de producción de leche" role="img"></canvas>
            </div>
        </div>
    </div>

    <!-- Listas -->
    <div class="row mt-4 g-3">
        <!-- Próximas alertas -->
        <div class="col-12">
            <div class="card gc-card">
                <div class="card-body">
                    <div class="d-flex align-items-center justify-content-between mb-2">
                        <h2 class="h5 mb-0 gc-section-title">🔔 Próximas alertas</h2>
                        <a class="btn btn-sm gc-btn-outline" href="@Url.Action("Index", "Alertas", new { proximos = true })">Ver todas</a>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-hover align-middle mb-0 gc-table">
                            <thead>
                                <tr>
                                    <th>Fecha</th>
                                    <th>Animal</th>
                                    <th>Tipo</th>
                                    <th>Estado</th>
                                    <th>Notas</th>
                                    <th class="text-end">Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.ProximasAlertas != null && Model.ProximasAlertas.Any())
                                {
                                    foreach (var a in Model.ProximasAlertas)
                                    {
                                        var badgeClass = a.Estado switch
                                        {
                                            "Pendiente" => "badge-pendiente",
                                            "Notificada" => "badge-notificada",
                                            "Atendida" => "badge-atendida",
                                            "Vencida" => "badge-vencida",
                                            _ => "bg-secondary"
                                        };
                                        <tr>
                                            <td>@a.Fecha.ToString("dd/MM/yyyy")</td>
                                            <td>@a.Animal</td>
                                            <td>@a.Tipo</td>
                                            <td><span class="badge rounded-pill @badgeClass">@a.Estado</span></td>
                                            <td>@a.Notas</td>
                                            <td class="text-end">
                                                <div class="btn-group">

                                                    <a class="btn btn-sm btn-outline-secondary"
                                                       href="@Url.Action("Details", "Alertas", new { id = a.Id })">Ver</a>

                                                    <form asp-controller="Alertas" asp-action="MarcarNotificada" method="post" class="d-inline">
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="id" value="@a.Id" />
                                                        <input type="hidden" name="returnUrl" value="@Url.Action("Index", "Dashboard")" />
                                                        <button type="submit" class="btn btn-sm btn-outline-success">Notificar</button>
                                                    </form>

                                                    <form asp-controller="Alertas" asp-action="MarcarAtendida" method="post" class="d-inline">
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="id" value="@a.Id" />
                                                        <input type="hidden" name="returnUrl" value="@Url.Action("Index", "Dashboard")" />
                                                        <button type="submit" class="btn btn-sm btn-outline-primary">Atendida</button>
                                                    </form>

                                                </div>
                                            </td>

                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="6" class="text-center py-4 text-muted">No hay alertas próximas.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Últimos servicios -->
        <div class="col-lg-6">
            <div class="card gc-card h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center justify-content-between mb-2">
                        <h2 class="h6 mb-0 gc-section-title">🚀 Últimos servicios</h2>
                        <a class="btn btn-sm gc-btn-outline" href="@Url.Action("Index", "Servicios")">Ver servicios</a>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-sm align-middle mb-0 gc-table">
                            <thead>
                                <tr>
                                    <th>Fecha</th>
                                    <th>Animal</th>
                                    <th>Tipo</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.UltimosServicios != null && Model.UltimosServicios.Any())
                                {
                                    foreach (var s in Model.UltimosServicios)
                                    {
                                        <tr>
                                            <td>@s.Fecha.ToString("dd/MM/yyyy")</td>
                                            <td>@s.Animal</td>
                                            <td>@s.Tipo</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr><td colspan="3" class="text-center py-4 text-muted">Sin registros</td></tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Partos recientes -->
        <div class="col-lg-6">
            <div class="card gc-card h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center justify-content-between mb-2">
                        <h2 class="h6 mb-0 gc-section-title">🐄 Partos recientes</h2>
                        <a class="btn btn-sm gc-btn-outline" href="@Url.Action("Index", "Partos")">Ver partos</a>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-sm align-middle mb-0 gc-table">
                            <thead>
                                <tr>
                                    <th>Fecha</th>
                                    <th>Madre</th>
                                    <th>Tipo</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.PartosRecientes != null && Model.PartosRecientes.Any())
                                {
                                    foreach (var p in Model.PartosRecientes)
                                    {
                                        <tr>
                                            <td>@p.Fecha.ToString("dd/MM/yyyy")</td>
                                            <td>@p.Madre</td>
                                            <td>@p.TipoParto</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr><td colspan="3" class="text-center py-4 text-muted">Sin registros</td></tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Chart.js (CDN) -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js"></script>
    <script>
        // Datos desde el servidor
        const dataSemana = {
            labels: @Html.Raw(jsonSemanaLabels),
            data:   @Html.Raw(jsonSemanaData)
        };
        const dataMes = {
            labels: @Html.Raw(jsonMesLabels),
            data:   @Html.Raw(jsonMesData)
        };
        const dataAnio = {
            labels: @Html.Raw(jsonAnioLabels),
            data:   @Html.Raw(jsonAnioData)
        };

        // Colores siguiendo el tema
        const baseColor = 'rgba(61, 153, 112, 1)';
        const fillColor = 'rgba(61, 153, 112, 0.10)';
        const gridColor = 'rgba(0,0,0,0.06)';
        const tickColor = '#6b7280';

        let chart;
        const ctx = document.getElementById('milkChart').getContext('2d');

        function makeDataset(labels, values) {
            return {
                labels: labels,
                datasets: [{
                    label: 'Litros',
                    data: values,
                    tension: 0.35,
                    borderWidth: 2,
                    borderColor: baseColor,
                    backgroundColor: fillColor,
                    fill: true,
                    pointRadius: 3,
                    pointHoverRadius: 5,
                    pointBackgroundColor: baseColor
                }]
            };
        }

        function renderChart(labels, values) {
            if (chart) chart.destroy();
            chart = new Chart(ctx, {
                type: 'line',
                data: makeDataset(labels, values),
                options: {
                    maintainAspectRatio: false,
                    plugins: {
                        legend: { display: false },
                        tooltip: {
                            callbacks: {
                                label: c => `${c.parsed.y?.toLocaleString?.() ?? c.parsed.y} L`
                            }
                        }
                    },
                    scales: {
                        x: {
                            grid: { color: gridColor },
                            ticks: { color: tickColor }
                        },
                        y: {
                            beginAtZero: true,
                            grid: { color: gridColor },
                            ticks: {
                                color: tickColor,
                                callback: v => `${v} L`
                            }
                        }
                    }
                }
            });
        }

        // Inicial: Semana
        renderChart(dataSemana.labels, dataSemana.data);

        // Tabs
        const tabSemana = document.getElementById('tab-semana');
        const tabMes    = document.getElementById('tab-mes');
        const tabAnio   = document.getElementById('tab-anio');

        tabSemana.addEventListener('click', () => { setActive(tabSemana); renderChart(dataSemana.labels, dataSemana.data); });
        tabMes.addEventListener('click',    () => { setActive(tabMes);    renderChart(dataMes.labels, dataMes.data); });
        tabAnio.addEventListener('click',   () => { setActive(tabAnio);   renderChart(dataAnio.labels, dataAnio.data); });

        function setActive(btn) {
            document.querySelectorAll('#milkTabs .gc-pill').forEach(b => b.classList.remove('active'));
            btn.classList.add('active');
        }
    </script>
}
